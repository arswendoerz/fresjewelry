/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const ProductLazyImport = createFileRoute('/product')()
const IndexLazyImport = createFileRoute('/')()
const ShoppingCartIndexLazyImport = createFileRoute('/shoppingCart/')()
const NotificationIndexLazyImport = createFileRoute('/notification/')()
const AccountIndexLazyImport = createFileRoute('/account/')()
const AboutUsIndexLazyImport = createFileRoute('/aboutUs/')()
const AuthRegisterLazyImport = createFileRoute('/auth/register')()
const AuthLoginLazyImport = createFileRoute('/auth/login')()

// Create/Update Routes

const ProductLazyRoute = ProductLazyImport.update({
  id: '/product',
  path: '/product',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/product.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ShoppingCartIndexLazyRoute = ShoppingCartIndexLazyImport.update({
  id: '/shoppingCart/',
  path: '/shoppingCart/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/shoppingCart/index.lazy').then((d) => d.Route),
)

const NotificationIndexLazyRoute = NotificationIndexLazyImport.update({
  id: '/notification/',
  path: '/notification/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/notification/index.lazy').then((d) => d.Route),
)

const AccountIndexLazyRoute = AccountIndexLazyImport.update({
  id: '/account/',
  path: '/account/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/account/index.lazy').then((d) => d.Route))

const AboutUsIndexLazyRoute = AboutUsIndexLazyImport.update({
  id: '/aboutUs/',
  path: '/aboutUs/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/aboutUs/index.lazy').then((d) => d.Route))

const AuthRegisterLazyRoute = AuthRegisterLazyImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/register.lazy').then((d) => d.Route))

const AuthLoginLazyRoute = AuthLoginLazyImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/login.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/product': {
      id: '/product'
      path: '/product'
      fullPath: '/product'
      preLoaderRoute: typeof ProductLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/aboutUs/': {
      id: '/aboutUs/'
      path: '/aboutUs'
      fullPath: '/aboutUs'
      preLoaderRoute: typeof AboutUsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/account/': {
      id: '/account/'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/notification/': {
      id: '/notification/'
      path: '/notification'
      fullPath: '/notification'
      preLoaderRoute: typeof NotificationIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/shoppingCart/': {
      id: '/shoppingCart/'
      path: '/shoppingCart'
      fullPath: '/shoppingCart'
      preLoaderRoute: typeof ShoppingCartIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/product': typeof ProductLazyRoute
  '/auth/login': typeof AuthLoginLazyRoute
  '/auth/register': typeof AuthRegisterLazyRoute
  '/aboutUs': typeof AboutUsIndexLazyRoute
  '/account': typeof AccountIndexLazyRoute
  '/notification': typeof NotificationIndexLazyRoute
  '/shoppingCart': typeof ShoppingCartIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/product': typeof ProductLazyRoute
  '/auth/login': typeof AuthLoginLazyRoute
  '/auth/register': typeof AuthRegisterLazyRoute
  '/aboutUs': typeof AboutUsIndexLazyRoute
  '/account': typeof AccountIndexLazyRoute
  '/notification': typeof NotificationIndexLazyRoute
  '/shoppingCart': typeof ShoppingCartIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/product': typeof ProductLazyRoute
  '/auth/login': typeof AuthLoginLazyRoute
  '/auth/register': typeof AuthRegisterLazyRoute
  '/aboutUs/': typeof AboutUsIndexLazyRoute
  '/account/': typeof AccountIndexLazyRoute
  '/notification/': typeof NotificationIndexLazyRoute
  '/shoppingCart/': typeof ShoppingCartIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/product'
    | '/auth/login'
    | '/auth/register'
    | '/aboutUs'
    | '/account'
    | '/notification'
    | '/shoppingCart'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/product'
    | '/auth/login'
    | '/auth/register'
    | '/aboutUs'
    | '/account'
    | '/notification'
    | '/shoppingCart'
  id:
    | '__root__'
    | '/'
    | '/product'
    | '/auth/login'
    | '/auth/register'
    | '/aboutUs/'
    | '/account/'
    | '/notification/'
    | '/shoppingCart/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  ProductLazyRoute: typeof ProductLazyRoute
  AuthLoginLazyRoute: typeof AuthLoginLazyRoute
  AuthRegisterLazyRoute: typeof AuthRegisterLazyRoute
  AboutUsIndexLazyRoute: typeof AboutUsIndexLazyRoute
  AccountIndexLazyRoute: typeof AccountIndexLazyRoute
  NotificationIndexLazyRoute: typeof NotificationIndexLazyRoute
  ShoppingCartIndexLazyRoute: typeof ShoppingCartIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  ProductLazyRoute: ProductLazyRoute,
  AuthLoginLazyRoute: AuthLoginLazyRoute,
  AuthRegisterLazyRoute: AuthRegisterLazyRoute,
  AboutUsIndexLazyRoute: AboutUsIndexLazyRoute,
  AccountIndexLazyRoute: AccountIndexLazyRoute,
  NotificationIndexLazyRoute: NotificationIndexLazyRoute,
  ShoppingCartIndexLazyRoute: ShoppingCartIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/product",
        "/auth/login",
        "/auth/register",
        "/aboutUs/",
        "/account/",
        "/notification/",
        "/shoppingCart/"
      ]
    },
    "/": {
      "filePath": "index.lazy.jsx"
    },
    "/product": {
      "filePath": "product.lazy.jsx"
    },
    "/auth/login": {
      "filePath": "auth/login.lazy.jsx"
    },
    "/auth/register": {
      "filePath": "auth/register.lazy.jsx"
    },
    "/aboutUs/": {
      "filePath": "aboutUs/index.lazy.jsx"
    },
    "/account/": {
      "filePath": "account/index.lazy.jsx"
    },
    "/notification/": {
      "filePath": "notification/index.lazy.jsx"
    },
    "/shoppingCart/": {
      "filePath": "shoppingCart/index.lazy.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
